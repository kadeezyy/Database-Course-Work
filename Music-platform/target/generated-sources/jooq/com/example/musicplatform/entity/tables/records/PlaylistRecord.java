/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity.tables.records;


import com.example.musicplatform.entity.tables.Playlist;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlaylistRecord extends UpdatableRecordImpl<PlaylistRecord> implements Record7<UUID, UUID, String, LocalDateTime, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.playlist.id</code>.
     */
    public PlaylistRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.playlist.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.playlist.user_creator_id</code>.
     */
    public PlaylistRecord setUserCreatorId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.playlist.user_creator_id</code>.
     */
    public UUID getUserCreatorId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.playlist.title</code>.
     */
    public PlaylistRecord setTitle(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.playlist.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.playlist.creation_date</code>.
     */
    public PlaylistRecord setCreationDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.playlist.creation_date</code>.
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.playlist.last_updated</code>.
     */
    public PlaylistRecord setLastUpdated(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.playlist.last_updated</code>.
     */
    public LocalDateTime getLastUpdated() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.playlist.likes_count</code>.
     */
    public PlaylistRecord setLikesCount(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.playlist.likes_count</code>.
     */
    public Integer getLikesCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.playlist.songs_count</code>.
     */
    public PlaylistRecord setSongsCount(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.playlist.songs_count</code>.
     */
    public Integer getSongsCount() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, String, LocalDateTime, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, String, LocalDateTime, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Playlist.PLAYLIST.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Playlist.PLAYLIST.USER_CREATOR_ID;
    }

    @Override
    public Field<String> field3() {
        return Playlist.PLAYLIST.TITLE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Playlist.PLAYLIST.CREATION_DATE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Playlist.PLAYLIST.LAST_UPDATED;
    }

    @Override
    public Field<Integer> field6() {
        return Playlist.PLAYLIST.LIKES_COUNT;
    }

    @Override
    public Field<Integer> field7() {
        return Playlist.PLAYLIST.SONGS_COUNT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUserCreatorId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public LocalDateTime component4() {
        return getCreationDate();
    }

    @Override
    public LocalDateTime component5() {
        return getLastUpdated();
    }

    @Override
    public Integer component6() {
        return getLikesCount();
    }

    @Override
    public Integer component7() {
        return getSongsCount();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUserCreatorId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public LocalDateTime value4() {
        return getCreationDate();
    }

    @Override
    public LocalDateTime value5() {
        return getLastUpdated();
    }

    @Override
    public Integer value6() {
        return getLikesCount();
    }

    @Override
    public Integer value7() {
        return getSongsCount();
    }

    @Override
    public PlaylistRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PlaylistRecord value2(UUID value) {
        setUserCreatorId(value);
        return this;
    }

    @Override
    public PlaylistRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public PlaylistRecord value4(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public PlaylistRecord value5(LocalDateTime value) {
        setLastUpdated(value);
        return this;
    }

    @Override
    public PlaylistRecord value6(Integer value) {
        setLikesCount(value);
        return this;
    }

    @Override
    public PlaylistRecord value7(Integer value) {
        setSongsCount(value);
        return this;
    }

    @Override
    public PlaylistRecord values(UUID value1, UUID value2, String value3, LocalDateTime value4, LocalDateTime value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlaylistRecord
     */
    public PlaylistRecord() {
        super(Playlist.PLAYLIST);
    }

    /**
     * Create a detached, initialised PlaylistRecord
     */
    public PlaylistRecord(UUID id, UUID userCreatorId, String title, LocalDateTime creationDate, LocalDateTime lastUpdated, Integer likesCount, Integer songsCount) {
        super(Playlist.PLAYLIST);

        setId(id);
        setUserCreatorId(userCreatorId);
        setTitle(title);
        setCreationDate(creationDate);
        setLastUpdated(lastUpdated);
        setLikesCount(likesCount);
        setSongsCount(songsCount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PlaylistRecord
     */
    public PlaylistRecord(com.example.musicplatform.entity.tables.pojos.Playlist value) {
        super(Playlist.PLAYLIST);

        if (value != null) {
            setId(value.getId());
            setUserCreatorId(value.getUserCreatorId());
            setTitle(value.getTitle());
            setCreationDate(value.getCreationDate());
            setLastUpdated(value.getLastUpdated());
            setLikesCount(value.getLikesCount());
            setSongsCount(value.getSongsCount());
            resetChangedOnNotNull();
        }
    }
}
