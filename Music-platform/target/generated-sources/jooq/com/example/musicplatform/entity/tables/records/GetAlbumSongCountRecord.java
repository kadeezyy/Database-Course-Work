/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity.tables.records;


import com.example.musicplatform.entity.tables.GetAlbumSongCount;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetAlbumSongCountRecord extends TableRecordImpl<GetAlbumSongCountRecord> implements Record2<String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.get_album_song_count.album_name</code>.
     */
    public GetAlbumSongCountRecord setAlbumName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.get_album_song_count.album_name</code>.
     */
    public String getAlbumName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.get_album_song_count.song_count</code>.
     */
    public GetAlbumSongCountRecord setSongCount(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.get_album_song_count.song_count</code>.
     */
    public Long getSongCount() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return GetAlbumSongCount.GET_ALBUM_SONG_COUNT.ALBUM_NAME;
    }

    @Override
    public Field<Long> field2() {
        return GetAlbumSongCount.GET_ALBUM_SONG_COUNT.SONG_COUNT;
    }

    @Override
    public String component1() {
        return getAlbumName();
    }

    @Override
    public Long component2() {
        return getSongCount();
    }

    @Override
    public String value1() {
        return getAlbumName();
    }

    @Override
    public Long value2() {
        return getSongCount();
    }

    @Override
    public GetAlbumSongCountRecord value1(String value) {
        setAlbumName(value);
        return this;
    }

    @Override
    public GetAlbumSongCountRecord value2(Long value) {
        setSongCount(value);
        return this;
    }

    @Override
    public GetAlbumSongCountRecord values(String value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GetAlbumSongCountRecord
     */
    public GetAlbumSongCountRecord() {
        super(GetAlbumSongCount.GET_ALBUM_SONG_COUNT);
    }

    /**
     * Create a detached, initialised GetAlbumSongCountRecord
     */
    public GetAlbumSongCountRecord(String albumName, Long songCount) {
        super(GetAlbumSongCount.GET_ALBUM_SONG_COUNT);

        setAlbumName(albumName);
        setSongCount(songCount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised GetAlbumSongCountRecord
     */
    public GetAlbumSongCountRecord(com.example.musicplatform.entity.tables.pojos.GetAlbumSongCount value) {
        super(GetAlbumSongCount.GET_ALBUM_SONG_COUNT);

        if (value != null) {
            setAlbumName(value.getAlbumName());
            setSongCount(value.getSongCount());
            resetChangedOnNotNull();
        }
    }
}
