/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity.tables.records;


import com.example.musicplatform.entity.tables.GetUserLikedSongs;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetUserLikedSongsRecord extends TableRecordImpl<GetUserLikedSongsRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.get_user_liked_songs.song_title</code>.
     */
    public GetUserLikedSongsRecord setSongTitle(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.get_user_liked_songs.song_title</code>.
     */
    public String getSongTitle() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.get_user_liked_songs.artist_name</code>.
     */
    public GetUserLikedSongsRecord setArtistName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.get_user_liked_songs.artist_name</code>.
     */
    public String getArtistName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return GetUserLikedSongs.GET_USER_LIKED_SONGS.SONG_TITLE;
    }

    @Override
    public Field<String> field2() {
        return GetUserLikedSongs.GET_USER_LIKED_SONGS.ARTIST_NAME;
    }

    @Override
    public String component1() {
        return getSongTitle();
    }

    @Override
    public String component2() {
        return getArtistName();
    }

    @Override
    public String value1() {
        return getSongTitle();
    }

    @Override
    public String value2() {
        return getArtistName();
    }

    @Override
    public GetUserLikedSongsRecord value1(String value) {
        setSongTitle(value);
        return this;
    }

    @Override
    public GetUserLikedSongsRecord value2(String value) {
        setArtistName(value);
        return this;
    }

    @Override
    public GetUserLikedSongsRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GetUserLikedSongsRecord
     */
    public GetUserLikedSongsRecord() {
        super(GetUserLikedSongs.GET_USER_LIKED_SONGS);
    }

    /**
     * Create a detached, initialised GetUserLikedSongsRecord
     */
    public GetUserLikedSongsRecord(String songTitle, String artistName) {
        super(GetUserLikedSongs.GET_USER_LIKED_SONGS);

        setSongTitle(songTitle);
        setArtistName(artistName);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised GetUserLikedSongsRecord
     */
    public GetUserLikedSongsRecord(com.example.musicplatform.entity.tables.pojos.GetUserLikedSongs value) {
        super(GetUserLikedSongs.GET_USER_LIKED_SONGS);

        if (value != null) {
            setSongTitle(value.getSongTitle());
            setArtistName(value.getArtistName());
            resetChangedOnNotNull();
        }
    }
}
