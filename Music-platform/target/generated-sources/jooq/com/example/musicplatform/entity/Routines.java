/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity;


import com.example.musicplatform.entity.enums.Role;
import com.example.musicplatform.entity.routines.AddAlbum;
import com.example.musicplatform.entity.routines.AddArtist;
import com.example.musicplatform.entity.routines.AddGenre;
import com.example.musicplatform.entity.routines.AddPlaylist;
import com.example.musicplatform.entity.routines.AddSong;
import com.example.musicplatform.entity.routines.CreateNewUser;
import com.example.musicplatform.entity.routines.DropIndex;
import com.example.musicplatform.entity.routines.IncreaseLikesCount;
import com.example.musicplatform.entity.tables.GetAlbumSongCount;
import com.example.musicplatform.entity.tables.GetArtistIdsByUsername;
import com.example.musicplatform.entity.tables.GetArtistSongInfo;
import com.example.musicplatform.entity.tables.GetIndexes;
import com.example.musicplatform.entity.tables.GetUserLikedSongs;
import com.example.musicplatform.entity.tables.records.GetAlbumSongCountRecord;
import com.example.musicplatform.entity.tables.records.GetArtistIdsByUsernameRecord;
import com.example.musicplatform.entity.tables.records.GetArtistSongInfoRecord;
import com.example.musicplatform.entity.tables.records.GetIndexesRecord;
import com.example.musicplatform.entity.tables.records.GetUserLikedSongsRecord;

import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.add_album</code>
     */
    public static UUID addAlbum(
          Configuration configuration
        , String artistNickname
        , String genreName
        , String albumTitle
    ) {
        AddAlbum f = new AddAlbum();
        f.setArtistNickname(artistNickname);
        f.setGenreName(genreName);
        f.setAlbumTitle(albumTitle);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.add_album</code> as a field.
     */
    public static Field<UUID> addAlbum(
          String artistNickname
        , String genreName
        , String albumTitle
    ) {
        AddAlbum f = new AddAlbum();
        f.setArtistNickname(artistNickname);
        f.setGenreName(genreName);
        f.setAlbumTitle(albumTitle);

        return f.asField();
    }

    /**
     * Get <code>public.add_album</code> as a field.
     */
    public static Field<UUID> addAlbum(
          Field<String> artistNickname
        , Field<String> genreName
        , Field<String> albumTitle
    ) {
        AddAlbum f = new AddAlbum();
        f.setArtistNickname(artistNickname);
        f.setGenreName(genreName);
        f.setAlbumTitle(albumTitle);

        return f.asField();
    }

    /**
     * Call <code>public.add_artist</code>
     */
    public static UUID addArtist(
          Configuration configuration
        , String userName
        , String artistNickname
    ) {
        AddArtist f = new AddArtist();
        f.setUserName(userName);
        f.setArtistNickname(artistNickname);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.add_artist</code> as a field.
     */
    public static Field<UUID> addArtist(
          String userName
        , String artistNickname
    ) {
        AddArtist f = new AddArtist();
        f.setUserName(userName);
        f.setArtistNickname(artistNickname);

        return f.asField();
    }

    /**
     * Get <code>public.add_artist</code> as a field.
     */
    public static Field<UUID> addArtist(
          Field<String> userName
        , Field<String> artistNickname
    ) {
        AddArtist f = new AddArtist();
        f.setUserName(userName);
        f.setArtistNickname(artistNickname);

        return f.asField();
    }

    /**
     * Call <code>public.add_genre</code>
     */
    public static UUID addGenre(
          Configuration configuration
        , String genreName
        , String genreDescription
    ) {
        AddGenre f = new AddGenre();
        f.setGenreName(genreName);
        f.setGenreDescription(genreDescription);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.add_genre</code> as a field.
     */
    public static Field<UUID> addGenre(
          String genreName
        , String genreDescription
    ) {
        AddGenre f = new AddGenre();
        f.setGenreName(genreName);
        f.setGenreDescription(genreDescription);

        return f.asField();
    }

    /**
     * Get <code>public.add_genre</code> as a field.
     */
    public static Field<UUID> addGenre(
          Field<String> genreName
        , Field<String> genreDescription
    ) {
        AddGenre f = new AddGenre();
        f.setGenreName(genreName);
        f.setGenreDescription(genreDescription);

        return f.asField();
    }

    /**
     * Call <code>public.add_playlist</code>
     */
    public static UUID addPlaylist(
          Configuration configuration
        , String userUsername
        , String playlistTitle
    ) {
        AddPlaylist f = new AddPlaylist();
        f.setUserUsername(userUsername);
        f.setPlaylistTitle(playlistTitle);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.add_playlist</code> as a field.
     */
    public static Field<UUID> addPlaylist(
          String userUsername
        , String playlistTitle
    ) {
        AddPlaylist f = new AddPlaylist();
        f.setUserUsername(userUsername);
        f.setPlaylistTitle(playlistTitle);

        return f.asField();
    }

    /**
     * Get <code>public.add_playlist</code> as a field.
     */
    public static Field<UUID> addPlaylist(
          Field<String> userUsername
        , Field<String> playlistTitle
    ) {
        AddPlaylist f = new AddPlaylist();
        f.setUserUsername(userUsername);
        f.setPlaylistTitle(playlistTitle);

        return f.asField();
    }

    /**
     * Call <code>public.add_song</code>
     */
    public static UUID addSong(
          Configuration configuration
        , String genreName
        , String songTitle
    ) {
        AddSong f = new AddSong();
        f.setGenreName(genreName);
        f.setSongTitle(songTitle);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.add_song</code> as a field.
     */
    public static Field<UUID> addSong(
          String genreName
        , String songTitle
    ) {
        AddSong f = new AddSong();
        f.setGenreName(genreName);
        f.setSongTitle(songTitle);

        return f.asField();
    }

    /**
     * Get <code>public.add_song</code> as a field.
     */
    public static Field<UUID> addSong(
          Field<String> genreName
        , Field<String> songTitle
    ) {
        AddSong f = new AddSong();
        f.setGenreName(genreName);
        f.setSongTitle(songTitle);

        return f.asField();
    }

    /**
     * Call <code>public.create_new_user</code>
     */
    public static UUID createNewUser(
          Configuration configuration
        , Role userRole
        , String userUsername
        , String userPassword
        , String userEmail
    ) {
        CreateNewUser f = new CreateNewUser();
        f.setUserRole(userRole);
        f.setUserUsername(userUsername);
        f.setUserPassword(userPassword);
        f.setUserEmail(userEmail);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.create_new_user</code> as a field.
     */
    public static Field<UUID> createNewUser(
          Role userRole
        , String userUsername
        , String userPassword
        , String userEmail
    ) {
        CreateNewUser f = new CreateNewUser();
        f.setUserRole(userRole);
        f.setUserUsername(userUsername);
        f.setUserPassword(userPassword);
        f.setUserEmail(userEmail);

        return f.asField();
    }

    /**
     * Get <code>public.create_new_user</code> as a field.
     */
    public static Field<UUID> createNewUser(
          Field<Role> userRole
        , Field<String> userUsername
        , Field<String> userPassword
        , Field<String> userEmail
    ) {
        CreateNewUser f = new CreateNewUser();
        f.setUserRole(userRole);
        f.setUserUsername(userUsername);
        f.setUserPassword(userPassword);
        f.setUserEmail(userEmail);

        return f.asField();
    }

    /**
     * Call <code>public.drop_index</code>
     */
    public static void dropIndex(
          Configuration configuration
        , String tableName
        , String indexName
    ) {
        DropIndex p = new DropIndex();
        p.setTableName(tableName);
        p.setIndexName(indexName);

        p.execute(configuration);
    }

    /**
     * Call <code>public.increase_likes_count</code>
     */
    public static void increaseLikesCount(
          Configuration configuration
        , UUID songId
    ) {
        IncreaseLikesCount p = new IncreaseLikesCount();
        p.setSongId(songId);

        p.execute(configuration);
    }

    /**
     * Call <code>public.get_album_song_count</code>.
     */
    public static Result<GetAlbumSongCountRecord> getAlbumSongCount(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetAlbumSongCount.GET_ALBUM_SONG_COUNT.call(
        )).fetch();
    }

    /**
     * Get <code>public.get_album_song_count</code> as a table.
     */
    public static GetAlbumSongCount getAlbumSongCount() {
        return com.example.musicplatform.entity.tables.GetAlbumSongCount.GET_ALBUM_SONG_COUNT.call(
        );
    }

    /**
     * Call <code>public.get_artist_ids_by_username</code>.
     */
    public static Result<GetArtistIdsByUsernameRecord> getArtistIdsByUsername(
          Configuration configuration
        , String usernameParam
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetArtistIdsByUsername.GET_ARTIST_IDS_BY_USERNAME.call(
              usernameParam
        )).fetch();
    }

    /**
     * Get <code>public.get_artist_ids_by_username</code> as a table.
     */
    public static GetArtistIdsByUsername getArtistIdsByUsername(
          String usernameParam
    ) {
        return com.example.musicplatform.entity.tables.GetArtistIdsByUsername.GET_ARTIST_IDS_BY_USERNAME.call(
            usernameParam
        );
    }

    /**
     * Get <code>public.get_artist_ids_by_username</code> as a table.
     */
    public static GetArtistIdsByUsername getArtistIdsByUsername(
          Field<String> usernameParam
    ) {
        return com.example.musicplatform.entity.tables.GetArtistIdsByUsername.GET_ARTIST_IDS_BY_USERNAME.call(
            usernameParam
        );
    }

    /**
     * Call <code>public.get_artist_song_info</code>.
     */
    public static Result<GetArtistSongInfoRecord> getArtistSongInfo(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetArtistSongInfo.GET_ARTIST_SONG_INFO.call(
        )).fetch();
    }

    /**
     * Get <code>public.get_artist_song_info</code> as a table.
     */
    public static GetArtistSongInfo getArtistSongInfo() {
        return com.example.musicplatform.entity.tables.GetArtistSongInfo.GET_ARTIST_SONG_INFO.call(
        );
    }

    /**
     * Call <code>public.get_indexes</code>.
     */
    public static Result<GetIndexesRecord> getIndexes(
          Configuration configuration
        , String tableName
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetIndexes.GET_INDEXES.call(
              tableName
        )).fetch();
    }

    /**
     * Get <code>public.get_indexes</code> as a table.
     */
    public static GetIndexes getIndexes(
          String tableName
    ) {
        return com.example.musicplatform.entity.tables.GetIndexes.GET_INDEXES.call(
            tableName
        );
    }

    /**
     * Get <code>public.get_indexes</code> as a table.
     */
    public static GetIndexes getIndexes(
          Field<String> tableName
    ) {
        return com.example.musicplatform.entity.tables.GetIndexes.GET_INDEXES.call(
            tableName
        );
    }

    /**
     * Call <code>public.get_user_liked_songs</code>.
     */
    public static Result<GetUserLikedSongsRecord> getUserLikedSongs(
          Configuration configuration
        , String emailParam
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetUserLikedSongs.GET_USER_LIKED_SONGS.call(
              emailParam
        )).fetch();
    }

    /**
     * Get <code>public.get_user_liked_songs</code> as a table.
     */
    public static GetUserLikedSongs getUserLikedSongs(
          String emailParam
    ) {
        return com.example.musicplatform.entity.tables.GetUserLikedSongs.GET_USER_LIKED_SONGS.call(
            emailParam
        );
    }

    /**
     * Get <code>public.get_user_liked_songs</code> as a table.
     */
    public static GetUserLikedSongs getUserLikedSongs(
          Field<String> emailParam
    ) {
        return com.example.musicplatform.entity.tables.GetUserLikedSongs.GET_USER_LIKED_SONGS.call(
            emailParam
        );
    }
}
