/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity.tables.records;


import com.example.musicplatform.entity.tables.UserListeningHistory;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserListeningHistoryRecord extends UpdatableRecordImpl<UserListeningHistoryRecord> implements Record3<UUID, UUID, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_listening_history.user_id</code>.
     */
    public UserListeningHistoryRecord setUserId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_listening_history.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.user_listening_history.song_id</code>.
     */
    public UserListeningHistoryRecord setSongId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_listening_history.song_id</code>.
     */
    public UUID getSongId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.user_listening_history.date_time</code>.
     */
    public UserListeningHistoryRecord setDateTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_listening_history.date_time</code>.
     */
    public LocalDateTime getDateTime() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return UserListeningHistory.USER_LISTENING_HISTORY.USER_ID;
    }

    @Override
    public Field<UUID> field2() {
        return UserListeningHistory.USER_LISTENING_HISTORY.SONG_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return UserListeningHistory.USER_LISTENING_HISTORY.DATE_TIME;
    }

    @Override
    public UUID component1() {
        return getUserId();
    }

    @Override
    public UUID component2() {
        return getSongId();
    }

    @Override
    public LocalDateTime component3() {
        return getDateTime();
    }

    @Override
    public UUID value1() {
        return getUserId();
    }

    @Override
    public UUID value2() {
        return getSongId();
    }

    @Override
    public LocalDateTime value3() {
        return getDateTime();
    }

    @Override
    public UserListeningHistoryRecord value1(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserListeningHistoryRecord value2(UUID value) {
        setSongId(value);
        return this;
    }

    @Override
    public UserListeningHistoryRecord value3(LocalDateTime value) {
        setDateTime(value);
        return this;
    }

    @Override
    public UserListeningHistoryRecord values(UUID value1, UUID value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserListeningHistoryRecord
     */
    public UserListeningHistoryRecord() {
        super(UserListeningHistory.USER_LISTENING_HISTORY);
    }

    /**
     * Create a detached, initialised UserListeningHistoryRecord
     */
    public UserListeningHistoryRecord(UUID userId, UUID songId, LocalDateTime dateTime) {
        super(UserListeningHistory.USER_LISTENING_HISTORY);

        setUserId(userId);
        setSongId(songId);
        setDateTime(dateTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserListeningHistoryRecord
     */
    public UserListeningHistoryRecord(com.example.musicplatform.entity.tables.pojos.UserListeningHistory value) {
        super(UserListeningHistory.USER_LISTENING_HISTORY);

        if (value != null) {
            setUserId(value.getUserId());
            setSongId(value.getSongId());
            setDateTime(value.getDateTime());
            resetChangedOnNotNull();
        }
    }
}
