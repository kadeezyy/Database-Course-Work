/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity.routines;


import com.example.musicplatform.entity.Public;
import com.example.musicplatform.entity.enums.Role;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreateNewUser extends AbstractRoutine<UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>public.create_new_user.RETURN_VALUE</code>.
     */
    public static final Parameter<UUID> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.UUID, false, false);

    /**
     * The parameter <code>public.create_new_user.user_role</code>.
     */
    public static final Parameter<Role> USER_ROLE = Internal.createParameter("user_role", SQLDataType.VARCHAR.asEnumDataType(com.example.musicplatform.entity.enums.Role.class), false, false);

    /**
     * The parameter <code>public.create_new_user.user_username</code>.
     */
    public static final Parameter<String> USER_USERNAME = Internal.createParameter("user_username", SQLDataType.VARCHAR, false, false);

    /**
     * The parameter <code>public.create_new_user.user_password</code>.
     */
    public static final Parameter<String> USER_PASSWORD = Internal.createParameter("user_password", SQLDataType.VARCHAR, false, false);

    /**
     * The parameter <code>public.create_new_user.user_email</code>.
     */
    public static final Parameter<String> USER_EMAIL = Internal.createParameter("user_email", SQLDataType.VARCHAR, false, false);

    /**
     * Create a new routine call instance
     */
    public CreateNewUser() {
        super("create_new_user", Public.PUBLIC, SQLDataType.UUID);

        setReturnParameter(RETURN_VALUE);
        addInParameter(USER_ROLE);
        addInParameter(USER_USERNAME);
        addInParameter(USER_PASSWORD);
        addInParameter(USER_EMAIL);
    }

    /**
     * Set the <code>user_role</code> parameter IN value to the routine
     */
    public void setUserRole(Role value) {
        setValue(USER_ROLE, value);
    }

    /**
     * Set the <code>user_role</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public CreateNewUser setUserRole(Field<Role> field) {
        setField(USER_ROLE, field);
        return this;
    }

    /**
     * Set the <code>user_username</code> parameter IN value to the routine
     */
    public void setUserUsername(String value) {
        setValue(USER_USERNAME, value);
    }

    /**
     * Set the <code>user_username</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public CreateNewUser setUserUsername(Field<String> field) {
        setField(USER_USERNAME, field);
        return this;
    }

    /**
     * Set the <code>user_password</code> parameter IN value to the routine
     */
    public void setUserPassword(String value) {
        setValue(USER_PASSWORD, value);
    }

    /**
     * Set the <code>user_password</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    public CreateNewUser setUserPassword(Field<String> field) {
        setField(USER_PASSWORD, field);
        return this;
    }

    /**
     * Set the <code>user_email</code> parameter IN value to the routine
     */
    public void setUserEmail(String value) {
        setValue(USER_EMAIL, value);
    }

    /**
     * Set the <code>user_email</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public CreateNewUser setUserEmail(Field<String> field) {
        setField(USER_EMAIL, field);
        return this;
    }
}
