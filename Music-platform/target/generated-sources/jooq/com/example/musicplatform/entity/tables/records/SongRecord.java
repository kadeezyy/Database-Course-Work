/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity.tables.records;


import com.example.musicplatform.entity.tables.Song;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SongRecord extends UpdatableRecordImpl<SongRecord> implements Record5<UUID, UUID, String, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.song.id</code>.
     */
    public SongRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.song.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.song.genre_id</code>.
     */
    public SongRecord setGenreId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.song.genre_id</code>.
     */
    public UUID getGenreId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.song.title</code>.
     */
    public SongRecord setTitle(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.song.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.song.creation_date</code>.
     */
    public SongRecord setCreationDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.song.creation_date</code>.
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.song.likes_count</code>.
     */
    public SongRecord setLikesCount(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.song.likes_count</code>.
     */
    public Integer getLikesCount() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, String, LocalDateTime, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, UUID, String, LocalDateTime, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Song.SONG.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Song.SONG.GENRE_ID;
    }

    @Override
    public Field<String> field3() {
        return Song.SONG.TITLE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Song.SONG.CREATION_DATE;
    }

    @Override
    public Field<Integer> field5() {
        return Song.SONG.LIKES_COUNT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getGenreId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public LocalDateTime component4() {
        return getCreationDate();
    }

    @Override
    public Integer component5() {
        return getLikesCount();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getGenreId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public LocalDateTime value4() {
        return getCreationDate();
    }

    @Override
    public Integer value5() {
        return getLikesCount();
    }

    @Override
    public SongRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SongRecord value2(UUID value) {
        setGenreId(value);
        return this;
    }

    @Override
    public SongRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public SongRecord value4(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public SongRecord value5(Integer value) {
        setLikesCount(value);
        return this;
    }

    @Override
    public SongRecord values(UUID value1, UUID value2, String value3, LocalDateTime value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SongRecord
     */
    public SongRecord() {
        super(Song.SONG);
    }

    /**
     * Create a detached, initialised SongRecord
     */
    public SongRecord(UUID id, UUID genreId, String title, LocalDateTime creationDate, Integer likesCount) {
        super(Song.SONG);

        setId(id);
        setGenreId(genreId);
        setTitle(title);
        setCreationDate(creationDate);
        setLikesCount(likesCount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SongRecord
     */
    public SongRecord(com.example.musicplatform.entity.tables.pojos.Song value) {
        super(Song.SONG);

        if (value != null) {
            setId(value.getId());
            setGenreId(value.getGenreId());
            setTitle(value.getTitle());
            setCreationDate(value.getCreationDate());
            setLikesCount(value.getLikesCount());
            resetChangedOnNotNull();
        }
    }
}
