/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Artist implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID userId;
    private String nickname;
    private Integer likesCount;

    public Artist() {}

    public Artist(Artist value) {
        this.id = value.id;
        this.userId = value.userId;
        this.nickname = value.nickname;
        this.likesCount = value.likesCount;
    }

    public Artist(
        UUID id,
        UUID userId,
        String nickname,
        Integer likesCount
    ) {
        this.id = id;
        this.userId = userId;
        this.nickname = nickname;
        this.likesCount = likesCount;
    }

    /**
     * Getter for <code>public.artist.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.artist.id</code>.
     */
    public Artist setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.artist.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.artist.user_id</code>.
     */
    public Artist setUserId(UUID userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>public.artist.nickname</code>.
     */
    public String getNickname() {
        return this.nickname;
    }

    /**
     * Setter for <code>public.artist.nickname</code>.
     */
    public Artist setNickname(String nickname) {
        this.nickname = nickname;
        return this;
    }

    /**
     * Getter for <code>public.artist.likes_count</code>.
     */
    public Integer getLikesCount() {
        return this.likesCount;
    }

    /**
     * Setter for <code>public.artist.likes_count</code>.
     */
    public Artist setLikesCount(Integer likesCount) {
        this.likesCount = likesCount;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Artist other = (Artist) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.nickname == null) {
            if (other.nickname != null)
                return false;
        }
        else if (!this.nickname.equals(other.nickname))
            return false;
        if (this.likesCount == null) {
            if (other.likesCount != null)
                return false;
        }
        else if (!this.likesCount.equals(other.likesCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.nickname == null) ? 0 : this.nickname.hashCode());
        result = prime * result + ((this.likesCount == null) ? 0 : this.likesCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Artist (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(nickname);
        sb.append(", ").append(likesCount);

        sb.append(")");
        return sb.toString();
    }
}
