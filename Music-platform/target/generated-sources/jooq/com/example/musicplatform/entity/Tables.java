/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.entity;


import com.example.musicplatform.entity.tables.Album;
import com.example.musicplatform.entity.tables.AlbumSongs;
import com.example.musicplatform.entity.tables.Artist;
import com.example.musicplatform.entity.tables.ArtistSongs;
import com.example.musicplatform.entity.tables.CustomUser;
import com.example.musicplatform.entity.tables.Genre;
import com.example.musicplatform.entity.tables.GetAlbumSongCount;
import com.example.musicplatform.entity.tables.GetArtistIdsByUsername;
import com.example.musicplatform.entity.tables.GetArtistSongInfo;
import com.example.musicplatform.entity.tables.GetIndexes;
import com.example.musicplatform.entity.tables.GetUserLikedSongs;
import com.example.musicplatform.entity.tables.Playlist;
import com.example.musicplatform.entity.tables.PlaylistSongs;
import com.example.musicplatform.entity.tables.Song;
import com.example.musicplatform.entity.tables.UserFavouriteAlbums;
import com.example.musicplatform.entity.tables.UserFavouriteArtists;
import com.example.musicplatform.entity.tables.UserFavouritePlaylists;
import com.example.musicplatform.entity.tables.UserLikedSongs;
import com.example.musicplatform.entity.tables.UserListeningHistory;
import com.example.musicplatform.entity.tables.records.GetAlbumSongCountRecord;
import com.example.musicplatform.entity.tables.records.GetArtistIdsByUsernameRecord;
import com.example.musicplatform.entity.tables.records.GetArtistSongInfoRecord;
import com.example.musicplatform.entity.tables.records.GetIndexesRecord;
import com.example.musicplatform.entity.tables.records.GetUserLikedSongsRecord;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all tables in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>public.album</code>.
     */
    public static final Album ALBUM = Album.ALBUM;

    /**
     * The table <code>public.album_songs</code>.
     */
    public static final AlbumSongs ALBUM_SONGS = AlbumSongs.ALBUM_SONGS;

    /**
     * The table <code>public.artist</code>.
     */
    public static final Artist ARTIST = Artist.ARTIST;

    /**
     * The table <code>public.artist_songs</code>.
     */
    public static final ArtistSongs ARTIST_SONGS = ArtistSongs.ARTIST_SONGS;

    /**
     * The table <code>public.custom_user</code>.
     */
    public static final CustomUser CUSTOM_USER = CustomUser.CUSTOM_USER;

    /**
     * The table <code>public.genre</code>.
     */
    public static final Genre GENRE = Genre.GENRE;

    /**
     * The table <code>public.get_album_song_count</code>.
     */
    public static final GetAlbumSongCount GET_ALBUM_SONG_COUNT = GetAlbumSongCount.GET_ALBUM_SONG_COUNT;

    /**
     * Call <code>public.get_album_song_count</code>.
     */
    public static Result<GetAlbumSongCountRecord> GET_ALBUM_SONG_COUNT(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetAlbumSongCount.GET_ALBUM_SONG_COUNT.call(
        )).fetch();
    }

    /**
     * Get <code>public.get_album_song_count</code> as a table.
     */
    public static GetAlbumSongCount GET_ALBUM_SONG_COUNT() {
        return com.example.musicplatform.entity.tables.GetAlbumSongCount.GET_ALBUM_SONG_COUNT.call(
        );
    }

    /**
     * The table <code>public.get_artist_ids_by_username</code>.
     */
    public static final GetArtistIdsByUsername GET_ARTIST_IDS_BY_USERNAME = GetArtistIdsByUsername.GET_ARTIST_IDS_BY_USERNAME;

    /**
     * Call <code>public.get_artist_ids_by_username</code>.
     */
    public static Result<GetArtistIdsByUsernameRecord> GET_ARTIST_IDS_BY_USERNAME(
          Configuration configuration
        , String usernameParam
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetArtistIdsByUsername.GET_ARTIST_IDS_BY_USERNAME.call(
              usernameParam
        )).fetch();
    }

    /**
     * Get <code>public.get_artist_ids_by_username</code> as a table.
     */
    public static GetArtistIdsByUsername GET_ARTIST_IDS_BY_USERNAME(
          String usernameParam
    ) {
        return com.example.musicplatform.entity.tables.GetArtistIdsByUsername.GET_ARTIST_IDS_BY_USERNAME.call(
            usernameParam
        );
    }

    /**
     * Get <code>public.get_artist_ids_by_username</code> as a table.
     */
    public static GetArtistIdsByUsername GET_ARTIST_IDS_BY_USERNAME(
          Field<String> usernameParam
    ) {
        return com.example.musicplatform.entity.tables.GetArtistIdsByUsername.GET_ARTIST_IDS_BY_USERNAME.call(
            usernameParam
        );
    }

    /**
     * The table <code>public.get_artist_song_info</code>.
     */
    public static final GetArtistSongInfo GET_ARTIST_SONG_INFO = GetArtistSongInfo.GET_ARTIST_SONG_INFO;

    /**
     * Call <code>public.get_artist_song_info</code>.
     */
    public static Result<GetArtistSongInfoRecord> GET_ARTIST_SONG_INFO(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetArtistSongInfo.GET_ARTIST_SONG_INFO.call(
        )).fetch();
    }

    /**
     * Get <code>public.get_artist_song_info</code> as a table.
     */
    public static GetArtistSongInfo GET_ARTIST_SONG_INFO() {
        return com.example.musicplatform.entity.tables.GetArtistSongInfo.GET_ARTIST_SONG_INFO.call(
        );
    }

    /**
     * The table <code>public.get_indexes</code>.
     */
    public static final GetIndexes GET_INDEXES = GetIndexes.GET_INDEXES;

    /**
     * Call <code>public.get_indexes</code>.
     */
    public static Result<GetIndexesRecord> GET_INDEXES(
          Configuration configuration
        , String tableName
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetIndexes.GET_INDEXES.call(
              tableName
        )).fetch();
    }

    /**
     * Get <code>public.get_indexes</code> as a table.
     */
    public static GetIndexes GET_INDEXES(
          String tableName
    ) {
        return com.example.musicplatform.entity.tables.GetIndexes.GET_INDEXES.call(
            tableName
        );
    }

    /**
     * Get <code>public.get_indexes</code> as a table.
     */
    public static GetIndexes GET_INDEXES(
          Field<String> tableName
    ) {
        return com.example.musicplatform.entity.tables.GetIndexes.GET_INDEXES.call(
            tableName
        );
    }

    /**
     * The table <code>public.get_user_liked_songs</code>.
     */
    public static final GetUserLikedSongs GET_USER_LIKED_SONGS = GetUserLikedSongs.GET_USER_LIKED_SONGS;

    /**
     * Call <code>public.get_user_liked_songs</code>.
     */
    public static Result<GetUserLikedSongsRecord> GET_USER_LIKED_SONGS(
          Configuration configuration
        , String emailParam
    ) {
        return configuration.dsl().selectFrom(com.example.musicplatform.entity.tables.GetUserLikedSongs.GET_USER_LIKED_SONGS.call(
              emailParam
        )).fetch();
    }

    /**
     * Get <code>public.get_user_liked_songs</code> as a table.
     */
    public static GetUserLikedSongs GET_USER_LIKED_SONGS(
          String emailParam
    ) {
        return com.example.musicplatform.entity.tables.GetUserLikedSongs.GET_USER_LIKED_SONGS.call(
            emailParam
        );
    }

    /**
     * Get <code>public.get_user_liked_songs</code> as a table.
     */
    public static GetUserLikedSongs GET_USER_LIKED_SONGS(
          Field<String> emailParam
    ) {
        return com.example.musicplatform.entity.tables.GetUserLikedSongs.GET_USER_LIKED_SONGS.call(
            emailParam
        );
    }

    /**
     * The table <code>public.playlist</code>.
     */
    public static final Playlist PLAYLIST = Playlist.PLAYLIST;

    /**
     * The table <code>public.playlist_songs</code>.
     */
    public static final PlaylistSongs PLAYLIST_SONGS = PlaylistSongs.PLAYLIST_SONGS;

    /**
     * The table <code>public.song</code>.
     */
    public static final Song SONG = Song.SONG;

    /**
     * The table <code>public.user_favourite_albums</code>.
     */
    public static final UserFavouriteAlbums USER_FAVOURITE_ALBUMS = UserFavouriteAlbums.USER_FAVOURITE_ALBUMS;

    /**
     * The table <code>public.user_favourite_artists</code>.
     */
    public static final UserFavouriteArtists USER_FAVOURITE_ARTISTS = UserFavouriteArtists.USER_FAVOURITE_ARTISTS;

    /**
     * The table <code>public.user_favourite_playlists</code>.
     */
    public static final UserFavouritePlaylists USER_FAVOURITE_PLAYLISTS = UserFavouritePlaylists.USER_FAVOURITE_PLAYLISTS;

    /**
     * The table <code>public.user_liked_songs</code>.
     */
    public static final UserLikedSongs USER_LIKED_SONGS = UserLikedSongs.USER_LIKED_SONGS;

    /**
     * The table <code>public.user_listening_history</code>.
     */
    public static final UserListeningHistory USER_LISTENING_HISTORY = UserListeningHistory.USER_LISTENING_HISTORY;
}
