/*
 * This file is generated by jOOQ.
 */
package com.example.musicplatform.model.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Album implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID artistId;
    private UUID genreId;
    private String title;
    private LocalDateTime creationDate;
    private Integer songsCount;
    private Integer likesCount;

    public Album() {}

    public Album(Album value) {
        this.id = value.id;
        this.artistId = value.artistId;
        this.genreId = value.genreId;
        this.title = value.title;
        this.creationDate = value.creationDate;
        this.songsCount = value.songsCount;
        this.likesCount = value.likesCount;
    }

    public Album(
        UUID id,
        UUID artistId,
        UUID genreId,
        String title,
        LocalDateTime creationDate,
        Integer songsCount,
        Integer likesCount
    ) {
        this.id = id;
        this.artistId = artistId;
        this.genreId = genreId;
        this.title = title;
        this.creationDate = creationDate;
        this.songsCount = songsCount;
        this.likesCount = likesCount;
    }

    /**
     * Getter for <code>public.album.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.album.id</code>.
     */
    public Album setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.album.artist_id</code>.
     */
    public UUID getArtistId() {
        return this.artistId;
    }

    /**
     * Setter for <code>public.album.artist_id</code>.
     */
    public Album setArtistId(UUID artistId) {
        this.artistId = artistId;
        return this;
    }

    /**
     * Getter for <code>public.album.genre_id</code>.
     */
    public UUID getGenreId() {
        return this.genreId;
    }

    /**
     * Setter for <code>public.album.genre_id</code>.
     */
    public Album setGenreId(UUID genreId) {
        this.genreId = genreId;
        return this;
    }

    /**
     * Getter for <code>public.album.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>public.album.title</code>.
     */
    public Album setTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Getter for <code>public.album.creation_date</code>.
     */
    public LocalDateTime getCreationDate() {
        return this.creationDate;
    }

    /**
     * Setter for <code>public.album.creation_date</code>.
     */
    public Album setCreationDate(LocalDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }

    /**
     * Getter for <code>public.album.songs_count</code>.
     */
    public Integer getSongsCount() {
        return this.songsCount;
    }

    /**
     * Setter for <code>public.album.songs_count</code>.
     */
    public Album setSongsCount(Integer songsCount) {
        this.songsCount = songsCount;
        return this;
    }

    /**
     * Getter for <code>public.album.likes_count</code>.
     */
    public Integer getLikesCount() {
        return this.likesCount;
    }

    /**
     * Setter for <code>public.album.likes_count</code>.
     */
    public Album setLikesCount(Integer likesCount) {
        this.likesCount = likesCount;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Album other = (Album) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.artistId == null) {
            if (other.artistId != null)
                return false;
        }
        else if (!this.artistId.equals(other.artistId))
            return false;
        if (this.genreId == null) {
            if (other.genreId != null)
                return false;
        }
        else if (!this.genreId.equals(other.genreId))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.creationDate == null) {
            if (other.creationDate != null)
                return false;
        }
        else if (!this.creationDate.equals(other.creationDate))
            return false;
        if (this.songsCount == null) {
            if (other.songsCount != null)
                return false;
        }
        else if (!this.songsCount.equals(other.songsCount))
            return false;
        if (this.likesCount == null) {
            if (other.likesCount != null)
                return false;
        }
        else if (!this.likesCount.equals(other.likesCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.artistId == null) ? 0 : this.artistId.hashCode());
        result = prime * result + ((this.genreId == null) ? 0 : this.genreId.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.creationDate == null) ? 0 : this.creationDate.hashCode());
        result = prime * result + ((this.songsCount == null) ? 0 : this.songsCount.hashCode());
        result = prime * result + ((this.likesCount == null) ? 0 : this.likesCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Album (");

        sb.append(id);
        sb.append(", ").append(artistId);
        sb.append(", ").append(genreId);
        sb.append(", ").append(title);
        sb.append(", ").append(creationDate);
        sb.append(", ").append(songsCount);
        sb.append(", ").append(likesCount);

        sb.append(")");
        return sb.toString();
    }
}
